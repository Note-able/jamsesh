version: "2"

services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/etc/nginx/conf.d:/etc/nginx/conf.d"
      - "/etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "/usr/share/nginx/html"
      - "./volumes/proxy/certs:/etc/nginx/certs:ro"

  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./volumes/proxy/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    container_name: elastic
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -XX:-AssumeMP"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

  elasticsearch2:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    container_name: elasticsearch2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -XX:-AssumeMP"
      - "discovery.zen.ping.unicast.hosts=elastic"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet

  beta:
    restart: always
    image: sportnak/noteable:latest
    container_name: beta
    ports:
      - "8082:8080"
    volumes:
      - "~/keys:/var/keys"
    environment:
      - VIRTUAL_HOST=beta.noteable.me
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8082
      - LETSENCRYPT_HOST=beta.noteable.me
      - LETSENCRYPT_EMAIL=team@noteable.me
    links:
      - "mongodb:mongo"

  production:
    restart: always
    image: sportnak/noteable:stable
    container_name: production
    volumes:
      - "~/keys:/var/keys"
    environment:
      - VIRTUAL_HOST=noteable.me
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=noteable.me
      - LETSENCRYPT_EMAIL=team@noteable.me
    links:
      - "mongodb:mongo"

  mongodb:
    restart: always
    image: mongo

volumes:
  esdata1:
  esdata2:

networks:
  esnet: